name: exercises
on: [push, pull_request]

jobs:
  exercises:
    strategy:
      fail-fast: false
      matrix:
        include:
          - nim: stable
            os: linux

          - nim: stable
            os: macOS

          - nim: stable
            os: windows

          - nim: devel
            os: linux

          - nim: '1.0'
            os: linux

    name: nim-${{ matrix.nim }}-${{ matrix.os }}
    runs-on: ${{ matrix.os == 'linux' && 'ubuntu-20.04' || (matrix.os == 'macOS' && 'macos-10.15' || 'windows-2019') }}
    env:
      NIM: ${{ matrix.nim }}

    steps:
      - name: Checkout exercism/nim
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Set BRANCH environmental variable
        shell: python
        run: |
          import os
          import re
          from urllib.request import Request, urlopen


          def to_branch(s: str) -> str:
              major, minor, *_ = s.split(".")
              return f"version-{major}-{minor}"


          nim_version = os.environ["NIM"]
          if nim_version == "stable":
              req = Request("https://nim-lang.org/channels/stable", headers={'User-Agent': 'Mozilla/5.0'})
              with urlopen(req) as resp:
                  stable = resp.read().decode('utf-8')
                  branch_name = to_branch(stable)
          elif re.match(r"\d+\.\d+", nim_version):
              branch_name = to_branch(nim_version)
          else:
              branch_name = nim_version
          with open(os.environ["GITHUB_ENV"], "a") as f:
              f.write(f"BRANCH={branch_name}")

      - name: Install Nim
        uses: alaviss/setup-nim@f81f2a6d1505ab32f440ec9d8adbb81e949d3bf0 # 0.1.1
        with:
          path: 'nim'
          version: ${{ env.BRANCH }}

      - name: Show versions of Nim and Nimble
        run: |
          nim --version
          printf '\n\n\n\n'
          nimble --version

      - name: Compile `check_exercises.nim`
        run: nim c --styleCheck:hint _test/check_exercises.nim

      - name: Run `check_exercises`
        run: _test/check_exercises
